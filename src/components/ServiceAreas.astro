---
import { siteConfig } from '@/config/site';
import { getCachedFooterLocations } from '@/lib/footer-locations';
import Section from './Section.astro';

export interface Props {
  heading: string;
  subtitle?: string;
  showAllAreas?: boolean;
  showCta?: boolean;
  ctaText?: string;
  ctaButtonText?: string;
  ctaButtonLink?: string;
  limit?: number;
  variant?: 'white' | 'gray' | 'primary' | 'gradient' | 'transparent';
  className?: string;
}

const {
  heading,
  subtitle,
  showAllAreas = false,
  showCta = true,
  ctaText = "Don't see your area? Contact us to check if we service your location!",
  ctaButtonText = "Check Your Area",
  ctaButtonLink = "/contact",
  limit = 24,
  variant = 'white',
  className = '',
} = Astro.props;

// Get featured locations for display
const locations = await getCachedFooterLocations();
const displayLocations = showAllAreas ? locations : locations.slice(0, limit);
---

<Section variant={variant} className={`service-areas ${className}`}>
  <div class="service-areas__container">
    <div class="service-areas__header">
      <h2 class="service-areas__heading">{heading}</h2>
      {subtitle && (
        <p class="service-areas__subtitle">{subtitle}</p>
      )}
    </div>
    
    {displayLocations.length > 0 && (
      <div class="service-areas__content">
        <div class="service-areas__list">
          {displayLocations.map(({ suburb, url }) => (
            <a href={url} class="service-areas__item">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="service-areas__icon">
                <path stroke-linecap="round" stroke-linejoin="round" d="M15 10.5a3 3 0 11-6 0 3 3 0 016 0z" />
                <path stroke-linecap="round" stroke-linejoin="round" d="M19.5 10.5c0 7.142-7.5 11.25-7.5 11.25S4.5 17.642 4.5 10.5a7.5 7.5 0 1115 0z" />
              </svg>
              <span class="service-areas__name">{suburb.name}</span>
            </a>
          ))}
        </div>
        
        {!showAllAreas && locations.length > limit && (
          <div class="service-areas__more">
            <a href="/locations" class="service-areas__more-link">
              View all {locations.length} service areas â†’
            </a>
          </div>
        )}
      </div>
    )}
    
    {showCta && (
      <div class="service-areas__cta">
        <p class="service-areas__cta-text">
          {ctaText}
        </p>
        <a href={ctaButtonLink} class="btn-cta-primary">
          {ctaButtonText}
        </a>
      </div>
    )}
  </div>
</Section>

<style>
  .service-areas {
    /* Padding now handled by Section component */
  }

  .service-areas__container {
    max-width: 80rem;
    margin: 0 auto;
    padding: 0 1rem;
  }

  .service-areas__header {
    text-align: center;
    margin-bottom: 3rem;
  }

  .service-areas__heading {
    font-size: 2rem;
    font-weight: bold;
    margin-bottom: 1rem;
    color: var(--color-primary, #1f2937);
    line-height: 1.2;
  }

  @media (min-width: 768px) {
    .service-areas__heading {
      font-size: 2.5rem;
    }
  }

  .service-areas__subtitle {
    font-size: 1.125rem;
    color: #6b7280;
    max-width: 40rem;
    margin: 0 auto;
  }

  .service-areas__content {
    margin-bottom: 3rem;
  }

  .service-areas__list {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    margin-bottom: 2rem;
    justify-content: center;
  }

  @media (min-width: 640px) {
    .service-areas__item {
      flex: 0 1 calc(50% - 0.5rem);
    }
  }

  @media (min-width: 768px) {
    .service-areas__item {
      flex: 0 1 calc(33.333% - 0.667rem);
    }
  }

  @media (min-width: 1024px) {
    .service-areas__item {
      flex: 0 1 calc(25% - 0.75rem);
    }
  }

  .service-areas__item {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1rem;
    background: #f9fafb;
    border-radius: 0.375rem;
    border: 1px solid #e5e7eb;
    transition: all 200ms ease;
    text-decoration: none;
    color: #374151;
  }

  .service-areas__item:hover {
    background: #f3f4f6;
    border-color: var(--color-primary, #3b82f6);
    transform: translateY(-2px);
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }

  .service-areas__icon {
    width: 1.25rem;
    height: 1.25rem;
    color: var(--color-primary, #3b82f6);
    flex-shrink: 0;
  }

  .service-areas__name {
    font-size: 1rem;
    font-weight: 500;
  }

  .service-areas__more {
    text-align: center;
    margin-top: 2rem;
  }

  .service-areas__more-link {
    color: var(--color-primary, #3b82f6);
    font-weight: 500;
    text-decoration: none;
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    transition: gap 150ms ease;
  }

  .service-areas__more-link:hover {
    gap: 0.75rem;
    text-decoration: underline;
  }

  .service-areas__cta {
    text-align: center;
    padding: 2rem;
    background: #f9fafb;
    border-radius: 0.5rem;
  }

  .service-areas__cta-text {
    font-size: 1.125rem;
    color: #4b5563;
    margin-bottom: 1.5rem;
  }
</style>