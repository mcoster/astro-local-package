---
import { getAltText } from '../utils/image-alt-generator';

export interface Props {
  heading: string;
  text: string;
  image: string;
  imageAlt?: string;
  imagePosition?: 'left' | 'right';
  link?: {
    text: string;
    href: string;
  };
  background?: 'white' | 'gray' | 'primary' | 'gradient';
  variant?: 'default' | 'compact' | 'expanded';
  cta?: {
    text: string;
    href: string;
  };
  class?: string;
}

const {
  heading,
  text,
  image,
  imageAlt = '',
  imagePosition = 'right',
  link,
  background = 'white',
  variant = 'default',
  cta,
  class: className = '',
} = Astro.props;

// Generate alt text from image path if not provided
const altText = getAltText(imageAlt, image, 'Section image');
---

<section class={`two-column two-column--bg-${background} two-column--${variant} ${className}`.trim()}>
  <div class="two-column__container container mx-auto px-4 max-w-6xl">
    <h2 class="text-3xl md:text-4xl lg:text-5xl font-bold mb-8 text-gray-900 text-center">{heading}</h2>
    <div class={`two-column__grid two-column__grid--${imagePosition}`}>
      <div class="two-column__content">
        <div class="text-lg leading-relaxed text-gray-600 mb-6" set:html={text
          .replace(/\n/g, '<br />')
          .replace(/\*\*(.*?)\*\*/g, '<strong class="font-semibold text-gray-900">$1</strong>')
        } />
        {link && (
          <a href={link.href} class="inline-flex items-center gap-2 text-primary font-medium hover:gap-3 transition-all">
            {link.text}
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-5 h-5">
              <path stroke-linecap="round" stroke-linejoin="round" d="M13.5 4.5L21 12m0 0l-7.5 7.5M21 12H3" />
            </svg>
          </a>
        )}
        {cta && (
          <a href={cta.href} class="two-column__cta">
            {cta.text}
          </a>
        )}
      </div>
      <div class="two-column__image-wrapper">
        <img 
          src={image} 
          alt={altText}
          class="two-column__image"
          loading="lazy"
        />
      </div>
    </div>
  </div>
</section>

<style>
  .two-column {
    padding: 4rem 0;
    background: white;
  }
  
  /* Background variants */
  .two-column--bg-white {
    background: white;
  }
  
  .two-column--bg-gray {
    background: #f9fafb;
  }
  
  .two-column--bg-primary {
    background: var(--color-primary-light, #eff6ff);
  }
  
  .two-column--bg-gradient {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
  }
  
  .two-column--bg-gradient .two-column__heading,
  .two-column--bg-gradient .two-column__text,
  .two-column--bg-gradient .two-column__text strong {
    color: white;
  }
  
  /* Size variants */
  .two-column--compact {
    padding: 2rem 0;
  }
  
  .two-column--expanded {
    padding: 6rem 0;
  }

  .two-column__container {
    max-width: 72rem;
    margin: 0 auto;
    padding: 0 2rem;
  }

  .two-column__grid {
    display: grid;
    gap: 3rem;
    align-items: center;
  }

  @media (min-width: 768px) {
    .two-column__grid {
      grid-template-columns: 1fr 1fr;
      gap: 4rem;
    }

    .two-column__grid--left .two-column__image-wrapper {
      order: -1;
    }
  }

  /* Heading and text styles now using Tailwind classes */
  
  /* Link styles */
  .text-primary {
    color: var(--color-primary, #3b82f6);
  }
  
  .two-column__cta {
    display: inline-block;
    margin-top: 1rem;
    padding: 0.75rem 1.5rem;
    background: var(--color-primary, #3b82f6);
    color: white;
    font-weight: 500;
    text-decoration: none;
    border-radius: 0.375rem;
    transition: background 150ms ease;
  }
  
  .two-column__cta:hover {
    background: var(--color-primary-dark, #2563eb);
  }
  
  .two-column--bg-gradient .two-column__cta {
    background: white;
    color: var(--color-primary, #3b82f6);
  }
  
  .two-column--bg-gradient .two-column__cta:hover {
    background: #f3f4f6;
  }

  /* Arrow styles now using Tailwind w-5 h-5 */

  .two-column__image-wrapper {
    position: relative;
    overflow: hidden;
    border-radius: 0.5rem;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
  }

  .two-column__image {
    width: 100%;
    height: auto;
    display: block;
    transition: transform 300ms ease;
  }

  .two-column__image-wrapper:hover .two-column__image {
    transform: scale(1.05);
  }

  /* Alternating background colors */
  .two-column:nth-of-type(even) {
    background: #f9fafb;
  }

  /* Mobile: Always show text first */
  @media (max-width: 767px) {
    .two-column__image-wrapper {
      order: 2;
    }
    
    .two-column__content {
      order: 1;
    }
  }
</style>